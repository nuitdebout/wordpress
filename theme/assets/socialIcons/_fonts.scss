@import url(https://fonts.googleapis.com/css?family=Roboto);

@font-face {
  font-family: 'AmaticSC';
  src: url('../fonts/AmaticSC-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'AmaticSC';
  src: url('../fonts/AmaticSC-Bold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: CommuneB1San31;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/Commune-B1San31-NuitDebout.otf") format("opentype");
}

@font-face {
	font-family: "<%= fontName %>";
	src: url('<%= fontPath %><%= fontName %>.eot');
	src: url('<%= fontPath %><%= fontName %>.eot?#iefix') format('eot'),
		url('<%= fontPath %><%= fontName %>.woff2') format('woff2'),
		url('<%= fontPath %><%= fontName %>.woff') format('woff'),
		url('<%= fontPath %><%= fontName %>.ttf') format('truetype');
}

@mixin <%= cssClass%>-styles {
	font-family: "<%= fontName %>";
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	// speak: none; // only necessary if not using the private unicode range (firstGlyph option)
	text-decoration: none;
	text-transform: none;
}

%<%= cssClass%> {
	@include <%= cssClass%>-styles;
}

@function <%= cssClass%>-char($filename) {
	$char: "";
<% _.each(glyphs, function(glyph) { %>
	@if $filename == <%= glyph.name %> {
		$char: "\<%= glyph.unicode[0].charCodeAt(0).toString(16).toUpperCase() %>";
	}<% }); %>

	@return $char;
}

@mixin <%= cssClass%>($filename, $insert: before, $extend: true) {
	&:#{$insert} {
		@if $extend {
			@extend %<%= cssClass%>;
		} @else {
			@include <%= cssClass%>-styles;
		}
		content: <%= cssClass%>-char($filename);
	}
}

<% _.each(glyphs, function(glyph) { %>.<%= cssClass %>-<%= glyph.name %> {
	@include <%= cssClass%>(<%= glyph.name %>);
}
<% }); %>

.CommuneFont {
  font-family:CommuneB1San31;
  letter-spacing: 1px;
}

.homepagescreen h2.CommuneFont {
    font-size: 6em;
}
